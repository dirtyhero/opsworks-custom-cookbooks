upstream unicorn_<%= @deploy[:domains].first %> {
 server unix:<%= @deploy[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @deploy[:domains].join(" ") %> <%= node[:hostname] %>;

  client_max_body_size 4G;
  add_header 'Access-Control-Allow-Origin' *;

  <% if @deploy[:log_format] %>
    <% @deploy[:log_format].each do |log_format_name| %>
      <% if node[:nginx][:log_format][log_format_name] %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @deploy[:domains].first %>.access.<%= log_format_name %>.log <%= log_format_name %>;
      <% end %>
    <% end %>
  <% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @deploy[:domains].first %>.access.log;
  <%end %>

  keepalive_timeout 5;

  root <%= @deploy[:absolute_document_root] %>;

  <% if @deploy[:nginx] && @deploy[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @deploy[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
  <% if @deploy[:nginx] && node[:nginx_basic_auth][:use] %>
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  <% end %>
    try_files $uri $uri/index.html $uri/index.htm @unicorn;
  }

  location ~* \.(eot|otf|ttf|woff)$ {
    add_header  Access-Control-Allow-Origin *;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Credentials' 'true';
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 10000;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;
    }

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @deploy[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @deploy[:absolute_document_root] %>;
  }
}

<% if @deploy[:ssl_support] %>
server {
  listen   443;
  server_name <%= @deploy[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @deploy[:domains].first %>-ssl.access.log;

  client_max_body_size 4G;
  add_header 'Access-Control-Allow-Origin' *;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @deploy[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @deploy[:domains].first %>.key;
  <% if @deploy[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @deploy[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  root <%= @deploy[:absolute_document_root] %>;

  <% if @deploy[:nginx] && @deploy[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @deploy[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
  <% if @deploy[:nginx] && node[:nginx_basic_auth][:use] %>
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  <% end %>
    try_files $uri $uri/index.html $uri/index.htm @unicorn;
  }

  location ~* \.(eot|otf|ttf|woff)$ {
    add_header  Access-Control-Allow-Origin *;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Credentials' 'true';
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Max-Age' 10000;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT, HEAD';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;
    }

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @deploy[:domains].first %>;
      break;
    }
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @deploy[:absolute_document_root] %>;
  }
}
<% end %>
