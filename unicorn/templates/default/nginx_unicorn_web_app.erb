upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

  server_tokens <%= node[:nginx][:server_tokens] %>;
  client_max_body_size 100m;
  set_real_ip_from   10.0.0.0/8;
  real_ip_header     X-Forwarded-For;

  <% if @application[:log_format] %>
    <% @application[:log_format].each do |log_format_name| %>
      <% if node[:nginx][:log_format][log_format_name] %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.<%= log_format_name %>.log <%= log_format_name %>;
      <% end %>
    <% end %>
  <% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;
  <%end %>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
  <% if node['nginx_basic_auth']['use'] %>
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  <% end %>
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    proxy_set_header X-Real-IP              $remote_addr;
    proxy_set_header X-Forwarded-Proto      $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 404 /not_found.html;
  error_page 500 502 503 504 /server_error.html;

  location  ~ \.html$ {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location  /.robots.txt {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location  ~ \.xml$ {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location /favicon {
    empty_gif;
    access_log    off;
    log_not_found off;
  }

}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;

  server_tokens <%= node[:nginx][:server_tokens] %>;
  client_max_body_size 100m;
  set_real_ip_from   10.0.0.0/8;
  real_ip_header     X-Forwarded-For;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
  <% if node['nginx_basic_auth']['use'] %>
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  <% end %>
    try_files$uri $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    proxy_set_header X-Real-IP              $remote_addr;
    proxy_set_header X-Forwarded-Proto      $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  error_page 404 /not_found.html;
  error_page 500 502 503 504 /server_error.html;

  location  ~ \.html$ {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location  /.robots.txt {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location  ~ \.xml$ {
    root <%= @application[:absolute_document_root] %>;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
  }

  location /favicon {
    empty_gif;
    access_log    off;
    log_not_found off;
  }

}
<% end %>